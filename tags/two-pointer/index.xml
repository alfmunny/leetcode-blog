<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>two-pointer on LeetCode In The Shell</title>
    <link>//alfmunny.com/leetcode-blog/tags/two-pointer/</link>
    <description>Recent content in two-pointer on LeetCode In The Shell</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 04 Apr 2020 17:20:00 +0200</lastBuildDate>
    
	<atom:link href="//alfmunny.com/leetcode-blog/tags/two-pointer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>283 - Move Zeros</title>
      <link>//alfmunny.com/leetcode-blog/posts/283-move-zeros/</link>
      <pubDate>Sat, 04 Apr 2020 17:20:00 +0200</pubDate>
      
      <guid>//alfmunny.com/leetcode-blog/posts/283-move-zeros/</guid>
      <description>leetcode
Problem Given an array nums, write a function to move all 0&amp;#39;s to the end of it while maintaining the relative order of the non-zero elements. Example: Input: [0,1,0,3,12] Output: [1,3,12,0,0] Note: You must do this in-place without making a copy of the array. Minimize the total number of operations. Solution Two pointers.
One pointer is for the start of 0.
One pointer keeps going forward.
class Solution: def moveZeros(self, nums): p1, p2 = 0, 0 for p2 &amp;lt; len(nums): if nums[p1] !</description>
    </item>
    
  </channel>
</rss>