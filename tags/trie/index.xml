<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>trie on LeetCode In The Shell</title>
    <link>//alfmunny.com/leetcode-blog/tags/trie/</link>
    <description>Recent content in trie on LeetCode In The Shell</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 May 2020 21:54:00 +0200</lastBuildDate>
    
	<atom:link href="//alfmunny.com/leetcode-blog/tags/trie/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>208 - Implement Trie (Prefix Tree)</title>
      <link>//alfmunny.com/leetcode-blog/posts/208-implement-trie/</link>
      <pubDate>Thu, 14 May 2020 21:54:00 +0200</pubDate>
      
      <guid>//alfmunny.com/leetcode-blog/posts/208-implement-trie/</guid>
      <description>leetcode
Problem  Implement a trie with insert, search, and startsWith methods.
Example:
Trie trie = new Trie();
trie.insert(&amp;ldquo;apple&amp;rdquo;); trie.search(&amp;ldquo;apple&amp;rdquo;); / returns true trie.search(&amp;ldquo;app&amp;rdquo;); / returns false trie.startsWith(&amp;ldquo;app&amp;rdquo;); // returns true trie.insert(&amp;ldquo;app&amp;rdquo;); trie.search(&amp;ldquo;app&amp;rdquo;); // returns true
 Solution Trie.
Use a &amp;ldquo;END&amp;rdquo; Symbol for word ending.
search method checks for &amp;ldquo;END&amp;rdquo;, startsWith not.
class Trie: def __init__(self): self.root = Node() def search(self, s): node = self.root for c in s: node = node.</description>
    </item>
    
  </channel>
</rss>